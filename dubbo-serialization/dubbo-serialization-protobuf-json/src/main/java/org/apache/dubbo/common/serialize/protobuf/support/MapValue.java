/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.dubbo.common.serialize.protobuf.support;

/**
 *  Generated by the protocol buffer compiler.  DO NOT EDIT!
  */
public final class MapValue {
  private MapValue() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Map)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, string&gt; attachments = 1;</code>
     */
    int getAttachmentsCount();
    /**
     * <code>map&lt;string, string&gt; attachments = 1;</code>
     */
    boolean containsAttachments(
            String key);
    /**
     * Use {@link #getAttachmentsMap()} instead.
     */
    @Deprecated
    java.util.Map<String, String>
    getAttachments();
    /**
     * <code>map&lt;string, string&gt; attachments = 1;</code>
     */
    java.util.Map<String, String>
    getAttachmentsMap();
    /**
     * <code>map&lt;string, string&gt; attachments = 1;</code>
     */

    String getAttachmentsOrDefault(
            String key,
            String defaultValue);
    /**
     * <code>map&lt;string, string&gt; attachments = 1;</code>
     */

    String getAttachmentsOrThrow(
            String key);
  }
  /**
   * Protobuf type {@code Map}
   */
  public  static final class Map extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Map)
      MapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Map.newBuilder() to construct.
    private Map(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Map() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Map(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                attachments_ = com.google.protobuf.MapField.newMapField(
                    AttachmentsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<String, String>
              attachments__ = input.readMessage(
                  AttachmentsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              attachments_.getMutableMap().put(
                  attachments__.getKey(), attachments__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MapValue.internal_static_Map_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetAttachments();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MapValue.internal_static_Map_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Map.class, Builder.class);
    }

    public static final int ATTACHMENTS_FIELD_NUMBER = 1;
    private static final class AttachmentsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          String, String> defaultEntry =
              com.google.protobuf.MapEntry
              .<String, String>newDefaultInstance(
                  MapValue.internal_static_Map_AttachmentsEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        String, String> attachments_;
    private com.google.protobuf.MapField<String, String>
    internalGetAttachments() {
      if (attachments_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AttachmentsDefaultEntryHolder.defaultEntry);
      }
      return attachments_;
    }

    @Override
    public int getAttachmentsCount() {
      return internalGetAttachments().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; attachments = 1;</code>
     */

    @Override
    public boolean containsAttachments(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetAttachments().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAttachmentsMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, String> getAttachments() {
      return getAttachmentsMap();
    }
    /**
     * <code>map&lt;string, string&gt; attachments = 1;</code>
     */

    @Override
    public java.util.Map<String, String> getAttachmentsMap() {
      return internalGetAttachments().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; attachments = 1;</code>
     */

    @Override
    public String getAttachmentsOrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetAttachments().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; attachments = 1;</code>
     */

    @Override
    public String getAttachmentsOrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetAttachments().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) {
          return true;
      }
      if (isInitialized == 0) {
          return false;
      }

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAttachments(),
          AttachmentsDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) {
          return size;
      }

      size = 0;
      for (java.util.Map.Entry<String, String> entry
           : internalGetAttachments().getMap().entrySet()) {
        com.google.protobuf.MapEntry<String, String>
        attachments__ = AttachmentsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, attachments__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Map)) {
        return super.equals(obj);
      }
      Map other = (Map) obj;

      boolean result = true;
      result = result && internalGetAttachments().equals(
          other.internalGetAttachments());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetAttachments().getMap().isEmpty()) {
        hash = (37 * hash) + ATTACHMENTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAttachments().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Map parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Map parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Map parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Map parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Map parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Map parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Map parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Map parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Map parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Map parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Map parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Map parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Map prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Map}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Map)
        MapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MapValue.internal_static_Map_descriptor;
      }

      @Override
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetAttachments();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableAttachments();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MapValue.internal_static_Map_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Map.class, Builder.class);
      }

      // Construct using org.apache.dubbo.common.serialize.protobuf.support.MapValue.Map.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        internalGetMutableAttachments().clear();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MapValue.internal_static_Map_descriptor;
      }

      @Override
      public Map getDefaultInstanceForType() {
        return Map.getDefaultInstance();
      }

      @Override
      public Map build() {
        Map result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Map buildPartial() {
        Map result = new Map(this);
        int from_bitField0_ = bitField0_;
        result.attachments_ = internalGetAttachments();
        result.attachments_.makeImmutable();
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Map) {
          return mergeFrom((Map)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Map other) {
        if (other == Map.getDefaultInstance()) {
            return this;
        }
        internalGetMutableAttachments().mergeFrom(
            other.internalGetAttachments());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Map parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Map) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          String, String> attachments_;
      private com.google.protobuf.MapField<String, String>
      internalGetAttachments() {
        if (attachments_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AttachmentsDefaultEntryHolder.defaultEntry);
        }
        return attachments_;
      }
      private com.google.protobuf.MapField<String, String>
      internalGetMutableAttachments() {
        onChanged();;
        if (attachments_ == null) {
          attachments_ = com.google.protobuf.MapField.newMapField(
              AttachmentsDefaultEntryHolder.defaultEntry);
        }
        if (!attachments_.isMutable()) {
          attachments_ = attachments_.copy();
        }
        return attachments_;
      }

      @Override
      public int getAttachmentsCount() {
        return internalGetAttachments().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; attachments = 1;</code>
       */

      @Override
      public boolean containsAttachments(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        return internalGetAttachments().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAttachmentsMap()} instead.
       */
      @Override
      @Deprecated
      public java.util.Map<String, String> getAttachments() {
        return getAttachmentsMap();
      }
      /**
       * <code>map&lt;string, string&gt; attachments = 1;</code>
       */

      @Override
      public java.util.Map<String, String> getAttachmentsMap() {
        return internalGetAttachments().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; attachments = 1;</code>
       */

      @Override
      public String getAttachmentsOrDefault(
          String key,
          String defaultValue) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetAttachments().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; attachments = 1;</code>
       */

      @Override
      public String getAttachmentsOrThrow(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        java.util.Map<String, String> map =
            internalGetAttachments().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAttachments() {
        internalGetMutableAttachments().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; attachments = 1;</code>
       */

      public Builder removeAttachments(
          String key) {
        if (key == null) { throw new NullPointerException(); }
        internalGetMutableAttachments().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<String, String>
      getMutableAttachments() {
        return internalGetMutableAttachments().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; attachments = 1;</code>
       */
      public Builder putAttachments(
          String key,
          String value) {
        if (key == null) { throw new NullPointerException(); }
        if (value == null) { throw new NullPointerException(); }
        internalGetMutableAttachments().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; attachments = 1;</code>
       */

      public Builder putAllAttachments(
          java.util.Map<String, String> values) {
        internalGetMutableAttachments().getMutableMap()
            .putAll(values);
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Map)
    }

    // @@protoc_insertion_point(class_scope:Map)
    private static final Map DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Map();
    }

    public static Map getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Map>
        PARSER = new com.google.protobuf.AbstractParser<Map>() {
      @Override
      public Map parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Map(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Map> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Map> getParserForType() {
      return PARSER;
    }

    @Override
    public Map getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Map_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Map_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Map_AttachmentsEntry_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Map_AttachmentsEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\tmap.proto\"e\n\003Map\022*\n\013attachments\030\001 \003(\0132" +
      "\025.Map.AttachmentsEntry\0322\n\020AttachmentsEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B>\n2or" +
      "g.apache.dubbo.common.serialize.protobuf" +
      ".supportB\010MapValueb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          @Override
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Map_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Map_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Map_descriptor,
        new String[] { "Attachments", });
    internal_static_Map_AttachmentsEntry_descriptor =
      internal_static_Map_descriptor.getNestedTypes().get(0);
    internal_static_Map_AttachmentsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Map_AttachmentsEntry_descriptor,
        new String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
